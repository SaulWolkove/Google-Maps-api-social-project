{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\solwo\\\\Desktop\\\\Coding\\\\TravellerProject\\\\Client\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport { useLoadScript, GoogleMap, MarkerF } from \"@react-google-maps/api\";\nimport { useCallback, useMemo, useState, useRef } from \"react\";\nimport { useQuery } from \"react-query\";\nimport \"./styles/map.css\";\nimport Places from \"./Places\";\nimport readMarkerRequest from \"../api/readMarkerRequest\";\nimport { library } from \"../config\";\nimport addMarkerRequest from \"../api/addMarkerRequest\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport PlaceList from \"./PlaceList\";\nimport deleteMarkerRequest from \"../api/deleteMarkerRequest\";\nimport PlaceItem from \"./PlaceItem\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n  const mapRef = useRef(3);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n    libraries: library\n  });\n  const {\n    isLoading,\n    data: markers\n  } = useQuery('markers', readMarkerRequest);\n  const center = useMemo(() => ({\n    lat: 24.52043,\n    lng: 15.856743\n  }), []);\n  const options = useMemo(() => ({\n    disableDefaultUI: true,\n    clickableIcons: false,\n    mapId: \"5c60bef575d03ff\"\n  }), []);\n  const queryClient = useQueryClient();\n  const {\n    mutate: addMarker\n  } = useMutation(newMarker => addMarkerRequest(newMarker), {\n    onSettled: () => {\n      queryClient.invalidateQueries(\"markers\");\n    }\n  });\n  const {\n    mutate: deleteMarker\n  } = useMutation(markerToDelete => deleteMarkerRequest(markerToDelete), {\n    onSettled: () => {\n      queryClient.invalidateQueries(\"markers\");\n    }\n  });\n  const onLoad = useCallback(map => mapRef.current = map, []);\n  const generateMiniInfo = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Damn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoaded && isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"addingPanel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Add A Destination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Places, {\n            setLocation: (position, country) => {\n              var _mapRef$current, _mapRef$current2;\n              (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.panTo(position);\n              (_mapRef$current2 = mapRef.current) === null || _mapRef$current2 === void 0 ? void 0 : _mapRef$current2.setZoom(4);\n              let newMarker = {\n                latLngLit: position,\n                markerCountry: country\n              };\n              addMarker(newMarker);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countriesPanel\",\n          children: !isLoading && markers.map(marker => /*#__PURE__*/_jsxDEV(PlaceItem, {\n            name: marker.country,\n            handleCountryDelete: country => {\n              markers.map(marker => {\n                if (marker.country == country) {\n                  deleteMarker(marker);\n                  return;\n                }\n              });\n            }\n          }, nanoid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerClassName: \"map-container\",\n        center: center,\n        zoom: 3,\n        options: options,\n        onLoad: onLoad,\n        children: !isLoading && markers.map(marker => /*#__PURE__*/_jsxDEV(MarkerF, {\n          position: {\n            lat: marker.latitude,\n            lng: marker.longitude\n          },\n          onMouseOver: generateMiniInfo\n        }, marker._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"fHsjB7XwYk6wFNIJF81HPnTb3AQ=\", false, function () {\n  return [useLoadScript, useQuery, useQueryClient, useMutation, useMutation];\n});\n_c = Map;\n;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["useLoadScript","GoogleMap","MarkerF","useCallback","useMemo","useState","useRef","useQuery","Places","readMarkerRequest","library","addMarkerRequest","useMutation","useQueryClient","PlaceList","deleteMarkerRequest","PlaceItem","nanoid","jsxDEV","_jsxDEV","Map","_s","mapRef","isLoaded","googleMapsApiKey","process","env","REACT_APP_GOOGLE_API_KEY","libraries","isLoading","data","markers","center","lat","lng","options","disableDefaultUI","clickableIcons","mapId","queryClient","mutate","addMarker","newMarker","onSettled","invalidateQueries","deleteMarker","markerToDelete","onLoad","map","current","generateMiniInfo","children","fileName","_jsxFileName","lineNumber","columnNumber","className","setLocation","position","country","_mapRef$current","_mapRef$current2","panTo","setZoom","latLngLit","markerCountry","marker","name","handleCountryDelete","mapContainerClassName","zoom","latitude","longitude","onMouseOver","_id","_c","$RefreshReg$"],"sources":["C:/Users/solwo/Desktop/Coding/TravellerProject/Client/src/components/Map.js"],"sourcesContent":["import {useLoadScript, GoogleMap, MarkerF} from \"@react-google-maps/api\";\r\nimport { useCallback, useMemo, useState, useRef } from \"react\";\r\nimport {useQuery} from \"react-query\";\r\nimport \"./styles/map.css\"\r\nimport Places from \"./Places\"\r\nimport readMarkerRequest from \"../api/readMarkerRequest\";\r\nimport { library } from \"../config\";\r\nimport addMarkerRequest from \"../api/addMarkerRequest\";\r\nimport {useMutation, useQueryClient} from \"react-query\";\r\nimport PlaceList from \"./PlaceList\";\r\nimport deleteMarkerRequest from \"../api/deleteMarkerRequest\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport {nanoid} from \"nanoid\";\r\n\r\n\r\n\r\nexport default function Map() {\r\n  const mapRef = useRef(3);\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n    libraries: library,\r\n  });\r\n\r\n  const {isLoading, data: markers} = useQuery(\r\n    'markers', \r\n    readMarkerRequest\r\n    )\r\n\r\n  const center = useMemo(() => ({ lat: 24.52043, lng: 15.856743 }), []);\r\n  const options = useMemo(()=> ({\r\n    disableDefaultUI: true,\r\n    clickableIcons: false,\r\n    mapId: \"5c60bef575d03ff\",})\r\n    ,[])\r\n\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const {mutate: addMarker} = useMutation(\r\n      (newMarker)=>addMarkerRequest(newMarker),\r\n      {\r\n        onSettled: ()=>{\r\n          queryClient.invalidateQueries(\"markers\")\r\n        }\r\n      }\r\n  )\r\n\r\n  const {mutate: deleteMarker} = useMutation(\r\n    (markerToDelete)=>deleteMarkerRequest(markerToDelete),\r\n    {\r\n      onSettled: ()=>{\r\n        queryClient.invalidateQueries(\"markers\")\r\n      }\r\n    }\r\n)\r\n  const onLoad = useCallback((map)=>(mapRef.current = map), []);\r\n\r\n  const generateMiniInfo = () => {\r\n    return(\r\n      <div>Damn</div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!isLoaded && isLoading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        \r\n        <div className=\"container\">\r\n          <div className=\"control\">\r\n            <div className=\"addingPanel\">\r\n            <h1>Add A Destination</h1>\r\n            <Places setLocation={(position, country)=>{\r\n              mapRef.current?.panTo(position);\r\n              mapRef.current?.setZoom(4);\r\n              let newMarker = {latLngLit: position, markerCountry:country}\r\n              addMarker(newMarker)\r\n            }}/>\r\n          </div>\r\n          <div className=\"countriesPanel\">\r\n            {!isLoading && markers.map((marker)=>(\r\n              <PlaceItem name={marker.country} \r\n              handleCountryDelete={(country) => {\r\n                markers.map((marker)=>{\r\n                  if(marker.country == country){\r\n                    deleteMarker(marker)\r\n                    return;\r\n                  }\r\n                })\r\n              }} \r\n              key={nanoid()}/>\r\n            ))}\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <GoogleMap\r\n          mapContainerClassName=\"map-container\"\r\n          center={center}\r\n          zoom={3}\r\n          options={options}\r\n          onLoad={onLoad}\r\n          > \r\n            {!isLoading && markers.map((marker)=>(\r\n              <MarkerF position={{lat: marker.latitude,lng: marker.longitude}} key={marker._id} onMouseOver={generateMiniInfo}/>\r\n              \r\n            ))}\r\n        </GoogleMap>\r\n\r\n        </div>\r\n        \r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}