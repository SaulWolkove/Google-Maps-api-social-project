{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\solwo\\\\Desktop\\\\Coding\\\\TravellerProject\\\\Client\\\\src\\\\components\\\\PhotoUpload.js\",\n  _s = $RefreshSig$();\nimport { Fragment, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(_ref => {\n  _s();\n  let {\n    submitStatus,\n    setSubmitStatus\n  } = _ref;\n  const [file, setFile] = useState(\"\");\n  const [fileName, setFileName] = useState(\"Choose File\");\n  const [uploadedFile, setUploadedFile] = useState({});\n  const onSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    setSubmitStatus(false);\n    try {\n      const res = await axios.post(\"http://localhost:3001/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      const {\n        fileName,\n        filePath\n      } = res.data;\n      setUploadedFile({\n        fileName,\n        filePath\n      });\n    } catch (err) {\n      if (err.response.status === 500) {\n        console.log(\"500 server error\");\n      } else {\n        console.log(err.response.data.msg);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => {\n          setFileName(e.target.files[0].name);\n          setFile(e.target.files[0]);\n          console.log(file);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"customFile\",\n        children: fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), submitStatus && onSubmit]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}, \"/qwK5O4E3vapl4tFraDXVrEWnk0=\");","map":{"version":3,"names":["Fragment","useState","axios","jsxDEV","_jsxDEV","_s","_ref","submitStatus","setSubmitStatus","file","setFile","fileName","setFileName","uploadedFile","setUploadedFile","onSubmit","e","preventDefault","formData","FormData","append","res","post","headers","filePath","data","err","response","status","console","log","msg","children","type","onChange","target","files","name","_jsxFileName","lineNumber","columnNumber","for"],"sources":["C:/Users/solwo/Desktop/Coding/TravellerProject/Client/src/components/PhotoUpload.js"],"sourcesContent":["import { Fragment, useState } from \"react\"\r\nimport axios from \"axios\"\r\n\r\nexport default ({submitStatus, setSubmitStatus})=> {\r\n    const [file, setFile] = useState(\"\");\r\n    const [fileName, setFileName] = useState(\"Choose File\")\r\n    const [uploadedFile, setUploadedFile] = useState({})\r\n\r\n    const onSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        setSubmitStatus(false)\r\n\r\n        try{\r\n            const res = await axios.post(\"http://localhost:3001/upload\", formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\"\r\n                }\r\n            });\r\n            const {fileName, filePath} = res.data\r\n            setUploadedFile({fileName, filePath})\r\n        }catch (err){\r\n            if(err.response.status === 500) {\r\n                console.log(\"500 server error\")\r\n            }else{\r\n                console.log(err.response.data.msg)\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            Upload File\r\n            <form onSubmit={onSubmit}>\r\n                <input type=\"file\" onChange={(e)=>{\r\n                    setFileName(e.target.files[0].name)\r\n                    setFile(e.target.files[0])\r\n                    console.log(file)\r\n                }}/>\r\n                <label for=\"customFile\">\r\n                    {fileName}\r\n                </label>\r\n                {submitStatus && onSubmit}\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAAC,EAAA,CAAeC,IAAA,IAAoC;EAAAD,EAAA;EAAA,IAAnC;IAACE,YAAY;IAAEC;EAAe,CAAC,GAAAF,IAAA;EAC3C,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,aAAa,CAAC;EACvD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpD,MAAMc,QAAQ,GAAG,MAAOC,CAAC,IAAI;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;IAC7BD,eAAe,CAAC,KAAK,CAAC;IAEtB,IAAG;MACC,MAAMa,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;QACnEK,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MACF,MAAM;QAACZ,QAAQ;QAAEa;MAAQ,CAAC,GAAGH,GAAG,CAACI,IAAI;MACrCX,eAAe,CAAC;QAACH,QAAQ;QAAEa;MAAQ,CAAC,CAAC;IACzC,CAAC,QAAOE,GAAG,EAAC;MACR,IAAGA,GAAG,CAACC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC5BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MACnC,CAAC,MAAI;QACDD,OAAO,CAACC,GAAG,CAACJ,GAAG,CAACC,QAAQ,CAACF,IAAI,CAACM,GAAG,CAAC;MACtC;IACJ;EACJ,CAAC;EACD,oBACI3B,OAAA,CAACJ,QAAQ;IAAAgC,QAAA,GAAC,aAEN,eAAA5B,OAAA;MAAMW,QAAQ,EAAEA,QAAS;MAAAiB,QAAA,gBACrB5B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAGlB,CAAC,IAAG;UAC9BJ,WAAW,CAACI,CAAC,CAACmB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC;UACnC3B,OAAO,CAACM,CAAC,CAACmB,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;UAC1BP,OAAO,CAACC,GAAG,CAACrB,IAAI,CAAC;QACrB;MAAE;QAAAE,QAAA,EAAA2B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACJpC,OAAA;QAAOqC,GAAG,EAAC,YAAY;QAAAT,QAAA,EAClBrB;MAAQ;QAAAA,QAAA,EAAA2B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACPjC,YAAY,IAAIQ,QAAQ;IAAA;MAAAJ,QAAA,EAAA2B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAA7B,QAAA,EAAA2B,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}