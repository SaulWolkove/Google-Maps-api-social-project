{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from \"react-query\";\nimport readMarkerRequest from \"../api/readMarkerRequest\";\nimport { Collection } from \"mongoose\";\nexport default _s(() => {\n  _s();\n  const {\n    isLoading,\n    data: markers\n  } = useQuery('markers', readMarkerRequest);\n  var countryList = [];\n  markers.map(marker => countryList.push(marker.country));\n  CollectedImages = {\n    \"image1\": require(`./UserImages/${countryList[0]}`),\n    \"image1\": require(`./UserImages/${countryList[0]}`)\n  };\n}, \"4KpLHUD95ELFq2hARtRoFEL9+gg=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","readMarkerRequest","Collection","_s","isLoading","data","markers","countryList","map","marker","push","country","CollectedImages","require"],"sources":["C:/Users/solwo/Desktop/Coding/TravellerProject/Client/src/components/ImageCollector.js"],"sourcesContent":["import { useQuery } from \"react-query\"\r\nimport readMarkerRequest from \"../api/readMarkerRequest\";\r\nimport { Collection } from \"mongoose\";\r\n\r\n\r\nexport default ()=>{\r\n    const {isLoading, data: markers} = useQuery(\r\n    'markers', \r\n    readMarkerRequest\r\n    )\r\n\r\n\r\n\r\n    var countryList = [];\r\n    markers.map((marker)=>(\r\n    countryList.push(marker.country)\r\n    ))\r\n\r\n\r\n\r\n\r\n    CollectedImages = {\r\n    \"image1\": require(`./UserImages/${countryList[0]}`),\r\n    \"image1\": require(`./UserImages/${countryList[0]}`)\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,OAAOC,iBAAiB,MAAM,0BAA0B;AACxD,SAASC,UAAU,QAAQ,UAAU;AAGrC,eAAAC,EAAA,CAAe,MAAI;EAAAA,EAAA;EACf,MAAM;IAACC,SAAS;IAAEC,IAAI,EAAEC;EAAO,CAAC,GAAGN,QAAQ,CAC3C,SAAS,EACTC,iBACA,CAAC;EAID,IAAIM,WAAW,GAAG,EAAE;EACpBD,OAAO,CAACE,GAAG,CAAEC,MAAM,IACnBF,WAAW,CAACG,IAAI,CAACD,MAAM,CAACE,OAAO,CAC9B,CAAC;EAKFC,eAAe,GAAG;IAClB,QAAQ,EAAEC,OAAO,CAAE,gBAAeN,WAAW,CAAC,CAAC,CAAE,EAAC,CAAC;IACnD,QAAQ,EAAEM,OAAO,CAAE,gBAAeN,WAAW,CAAC,CAAC,CAAE,EAAC;EAElD,CAAC;AAEL,CAAC;EAAA,QArBsCP,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}