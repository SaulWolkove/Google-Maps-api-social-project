{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\solwo\\\\Desktop\\\\Coding\\\\TravellerProject\\\\Client\\\\src\\\\components\\\\ControlCenter.js\";\nimport PlaceItem from \"./PlaceItem\";\nimport { nanoid } from \"nanoid\";\nimport Places from \"./Places\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ControlCenter(_ref) {\n  let {\n    mapRef,\n    markers,\n    addMarker,\n    deleteMarker,\n    isLoading\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addingPanel\",\n      children: /*#__PURE__*/_jsxDEV(Places, {\n        setLocation: (position, country, start, end, caption) => {\n          var _mapRef$current, _mapRef$current2;\n          (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.panTo(position);\n          (_mapRef$current2 = mapRef.current) === null || _mapRef$current2 === void 0 ? void 0 : _mapRef$current2.setZoom(4);\n          let newMarker = {\n            latLngLit: position,\n            markerCountry: country,\n            startDate: start,\n            endDate: end,\n            caption: caption\n          };\n          addMarker(newMarker);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countriesPanel\",\n      children: !isLoading && markers.map(marker => /*#__PURE__*/_jsxDEV(PlaceItem, {\n        name: marker.country,\n        handleCountryDelete: country => {\n          markers.map(marker => {\n            if (marker.country == country) {\n              deleteMarker(marker);\n              return;\n            }\n          });\n        }\n      }, nanoid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = ControlCenter;\nvar _c;\n$RefreshReg$(_c, \"ControlCenter\");","map":{"version":3,"names":["PlaceItem","nanoid","Places","jsxDEV","_jsxDEV","ControlCenter","_ref","mapRef","markers","addMarker","deleteMarker","isLoading","children","className","setLocation","position","country","start","end","caption","_mapRef$current","_mapRef$current2","current","panTo","setZoom","newMarker","latLngLit","markerCountry","startDate","endDate","fileName","_jsxFileName","lineNumber","columnNumber","map","marker","name","handleCountryDelete","_c","$RefreshReg$"],"sources":["C:/Users/solwo/Desktop/Coding/TravellerProject/Client/src/components/ControlCenter.js"],"sourcesContent":["import PlaceItem from \"./PlaceItem\";\r\nimport { nanoid } from \"nanoid\";\r\nimport Places from \"./Places\"\r\nexport default function ControlCenter({mapRef, markers, addMarker, deleteMarker, isLoading}){\r\n\r\nreturn(\r\n    <div>\r\n        <div className=\"addingPanel\">\r\n        <Places setLocation={(position, country, start, end, caption)=>{\r\n            mapRef.current?.panTo(position);\r\n            mapRef.current?.setZoom(4);\r\n            let newMarker = {latLngLit: position, markerCountry:country, startDate: start, endDate: end, caption: caption}\r\n            addMarker(newMarker)\r\n        }}/>\r\n        </div>\r\n        <div className=\"countriesPanel\">\r\n        {!isLoading && markers.map((marker)=>(\r\n            <PlaceItem name={marker.country} \r\n            handleCountryDelete={(country) => {\r\n            markers.map((marker)=>{\r\n                if(marker.country == country){\r\n                deleteMarker(marker)\r\n                return;\r\n                }\r\n            })\r\n            }} \r\n            key={nanoid()}/>\r\n        ))}\r\n        </div>\r\n    </div>\r\n)}"],"mappings":";AAAA,OAAOA,SAAS,MAAM,aAAa;AACnC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC7B,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAuD;EAAA,IAAtD;IAACC,MAAM;IAAEC,OAAO;IAAEC,SAAS;IAAEC,YAAY;IAAEC;EAAS,CAAC,GAAAL,IAAA;EAE3F,oBACIF,OAAA;IAAAQ,QAAA,gBACIR,OAAA;MAAKS,SAAS,EAAC,aAAa;MAAAD,QAAA,eAC5BR,OAAA,CAACF,MAAM;QAACY,WAAW,EAAEA,CAACC,QAAQ,EAAEC,OAAO,EAAEC,KAAK,EAAEC,GAAG,EAAEC,OAAO,KAAG;UAAA,IAAAC,eAAA,EAAAC,gBAAA;UAC3D,CAAAD,eAAA,GAAAb,MAAM,CAACe,OAAO,cAAAF,eAAA,uBAAdA,eAAA,CAAgBG,KAAK,CAACR,QAAQ,CAAC;UAC/B,CAAAM,gBAAA,GAAAd,MAAM,CAACe,OAAO,cAAAD,gBAAA,uBAAdA,gBAAA,CAAgBG,OAAO,CAAC,CAAC,CAAC;UAC1B,IAAIC,SAAS,GAAG;YAACC,SAAS,EAAEX,QAAQ;YAAEY,aAAa,EAACX,OAAO;YAAEY,SAAS,EAAEX,KAAK;YAAEY,OAAO,EAAEX,GAAG;YAAEC,OAAO,EAAEA;UAAO,CAAC;UAC9GV,SAAS,CAACgB,SAAS,CAAC;QACxB;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN7B,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC9B,CAACD,SAAS,IAAIH,OAAO,CAAC0B,GAAG,CAAEC,MAAM,iBAC9B/B,OAAA,CAACJ,SAAS;QAACoC,IAAI,EAAED,MAAM,CAACnB,OAAQ;QAChCqB,mBAAmB,EAAGrB,OAAO,IAAK;UAClCR,OAAO,CAAC0B,GAAG,CAAEC,MAAM,IAAG;YAClB,IAAGA,MAAM,CAACnB,OAAO,IAAIA,OAAO,EAAC;cAC7BN,YAAY,CAACyB,MAAM,CAAC;cACpB;YACA;UACJ,CAAC,CAAC;QACF;MAAE,GACGlC,MAAM,CAAC,CAAC;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AACT;AAACK,EAAA,GA3BsBjC,aAAa;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}