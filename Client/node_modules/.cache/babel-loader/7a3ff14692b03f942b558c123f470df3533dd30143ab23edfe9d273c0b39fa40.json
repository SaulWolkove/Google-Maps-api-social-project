{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\solwo\\\\Desktop\\\\Coding\\\\TravellerProject\\\\Client\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$();\nimport { useLoadScript, GoogleMap, MarkerF } from \"@react-google-maps/api\";\nimport { useCallback, useMemo, useState, useRef } from \"react\";\nimport { useQuery } from \"react-query\";\nimport \"./styles/map.css\";\nimport Places from \"./Places\";\nimport readMarkerRequest from \"../api/readMarkerRequest\";\nimport { library } from \"../config\";\nimport addMarkerRequest from \"../api/addMarkerRequest\";\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Map() {\n  _s();\n  const [location, setLocation] = useState([]);\n  const mapRef = useRef(3);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n    libraries: library\n  });\n  const {\n    isLoading,\n    data: markers\n  } = useQuery('markers', readMarkerRequest);\n  const center = useMemo(() => ({\n    lat: 24.52043,\n    lng: 15.856743\n  }), []);\n  const options = useMemo(() => ({\n    disableDefaultUI: true,\n    clickableIcons: false,\n    mapId: \"5c60bef575d03ff\"\n  }), []);\n  const queryClient = useQueryClient();\n  const {\n    mutate: addMarker\n  } = useMutation((latLngLit, country) => console.log(country), {\n    onSettled: () => {\n      queryClient.invalidateQueries(\"markers\");\n    }\n  });\n  const onLoad = useCallback(map => mapRef.current = map, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoaded && isLoading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add A Destination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Places, {\n          setLocation: (position, country) => {\n            var _mapRef$current, _mapRef$current2;\n            setLocation(position);\n            (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.panTo(position);\n            (_mapRef$current2 = mapRef.current) === null || _mapRef$current2 === void 0 ? void 0 : _mapRef$current2.setZoom(4);\n            addMarker(position, country);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerClassName: \"map-container\",\n        center: center,\n        zoom: 3,\n        options: options,\n        onLoad: onLoad,\n        children: !isLoading && markers.map(marker => /*#__PURE__*/_jsxDEV(MarkerF, {\n          position: {\n            lat: marker.latitude,\n            lng: marker.longitude\n          }\n        }, marker._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Map, \"MwaNmId2BkyIa3ti4TOBUN9uPJo=\", false, function () {\n  return [useLoadScript, useQuery, useQueryClient, useMutation];\n});\n_c = Map;\n;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["useLoadScript","GoogleMap","MarkerF","useCallback","useMemo","useState","useRef","useQuery","Places","readMarkerRequest","library","addMarkerRequest","useMutation","useQueryClient","jsxDEV","_jsxDEV","Map","_s","location","setLocation","mapRef","isLoaded","googleMapsApiKey","process","env","REACT_APP_GOOGLE_API_KEY","libraries","isLoading","data","markers","center","lat","lng","options","disableDefaultUI","clickableIcons","mapId","queryClient","mutate","addMarker","latLngLit","country","console","log","onSettled","invalidateQueries","onLoad","map","current","children","fileName","_jsxFileName","lineNumber","columnNumber","className","position","_mapRef$current","_mapRef$current2","panTo","setZoom","mapContainerClassName","zoom","marker","latitude","longitude","_id","_c","$RefreshReg$"],"sources":["C:/Users/solwo/Desktop/Coding/TravellerProject/Client/src/components/Map.js"],"sourcesContent":["import {useLoadScript, GoogleMap, MarkerF} from \"@react-google-maps/api\";\r\nimport { useCallback, useMemo, useState, useRef } from \"react\";\r\nimport {useQuery} from \"react-query\";\r\nimport \"./styles/map.css\"\r\nimport Places from \"./Places\"\r\nimport readMarkerRequest from \"../api/readMarkerRequest\";\r\nimport { library } from \"../config\";\r\nimport addMarkerRequest from \"../api/addMarkerRequest\";\r\nimport {useMutation, useQueryClient} from \"react-query\";\r\n\r\n\r\nexport default function Map() {\r\n  const [location, setLocation] = useState([]);\r\n  const mapRef = useRef(3);\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\r\n    libraries: library,\r\n  });\r\n\r\n\r\n  const {isLoading, data: markers} = useQuery(\r\n    'markers', \r\n    readMarkerRequest\r\n    );\r\n\r\n  const center = useMemo(() => ({ lat: 24.52043, lng: 15.856743 }), []);\r\n  const options = useMemo(()=> ({\r\n    disableDefaultUI: true,\r\n    clickableIcons: false,\r\n    mapId: \"5c60bef575d03ff\",})\r\n    ,[])\r\n\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  const {mutate: addMarker} = useMutation(\r\n      (latLngLit, country)=>console.log(country),\r\n      {\r\n        onSettled: ()=>{\r\n          queryClient.invalidateQueries(\"markers\")\r\n        }\r\n      }\r\n  )\r\n\r\n  const onLoad = useCallback((map)=>(mapRef.current = map), []);\r\n  return (\r\n    <div>\r\n      {!isLoaded && isLoading ? (\r\n        <h1>Loading...</h1>\r\n      ) : (\r\n        <div className=\"container\">\r\n          <div className=\"control\">\r\n          <h1>Add A Destination</h1>\r\n\r\n          <Places setLocation={(position, country)=>{\r\n            setLocation(position);\r\n            mapRef.current?.panTo(position);\r\n            mapRef.current?.setZoom(4);\r\n            addMarker(position, country)\r\n\r\n          }}/>\r\n        </div>\r\n        <GoogleMap\r\n          mapContainerClassName=\"map-container\"\r\n          center={center}\r\n          zoom={3}\r\n          options={options}\r\n          onLoad={onLoad}\r\n          > \r\n            {!isLoading && markers.map((marker)=>(\r\n              <MarkerF position={{lat: marker.latitude,lng: marker.longitude}} key={marker._id}/>\r\n              \r\n            ))}\r\n        </GoogleMap>\r\n\r\n        </div>\r\n        \r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}